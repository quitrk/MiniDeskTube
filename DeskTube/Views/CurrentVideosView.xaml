<UserControl x:Class="DeskTube.Views.CurrentVideosView"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" 
             xmlns:d="http://schemas.microsoft.com/expression/blend/2008" 
             mc:Ignorable="d"  
             xmlns:i="http://schemas.microsoft.com/expression/2010/interactivity"
             xmlns:Utilities="clr-namespace:Infrastructure.Utilities;assembly=Infrastructure"
             xmlns:ViewModels="clr-namespace:DeskTube.ViewModels" d:DesignHeight="300" d:DesignWidth="300"
             d:DataContext="{d:DesignInstance ViewModels:MainPageViewModel}">

    <UserControl.Resources>
        <ContextMenu x:Key="VideoContextMenu" 
                     Visibility="{Binding DataContext.IsUserAuthenticated, RelativeSource={RelativeSource AncestorType=UserControl}, Converter={StaticResource BoolToVisibilityConverter}}">

            <!-- add to -->
            <MenuItem Header="Add to" 
                          Visibility="{Binding DataContext.AvailablePlaylistsForAddVideo.Count, RelativeSource={RelativeSource AncestorType=UserControl}, Converter={StaticResource CountToVisibilityConverter}}"
                          ItemsSource="{Binding DataContext.AvailablePlaylistsForAddVideo, RelativeSource={RelativeSource AncestorType=UserControl}}">
                <MenuItem.ItemTemplate>
                    <DataTemplate>
                        <StackPanel Margin="-10">
                            <Path Style="{DynamicResource LineStyle}" x:Name="topBorder" Visibility="Collapsed"/>
                            <MenuItem Header="{Binding Title}" 
                                      Command="{Binding DataContext.AddVideoToPlaylistCommand, RelativeSource={RelativeSource AncestorType=UserControl}}">
                                <MenuItem.CommandParameter>
                                    <MultiBinding Converter="{StaticResource AddVideoToPlaylistConverter}">
                                        <Binding />
                                        <Binding Path="DataContext" RelativeSource="{RelativeSource AncestorType=ContextMenu}"/>
                                    </MultiBinding>
                                </MenuItem.CommandParameter>
                            </MenuItem>
                        </StackPanel>
                        <DataTemplate.Triggers>
                            <DataTrigger Binding="{Binding RelativeSource={RelativeSource PreviousData}}" Value="{x:Null}">
                                <Setter Property="Visibility" TargetName="topBorder" Value="Visible"/>
                            </DataTrigger>
                        </DataTemplate.Triggers>
                    </DataTemplate>
                </MenuItem.ItemTemplate>
            </MenuItem>

            <!-- remove -->
            <MenuItem Header="Remove"
                      Visibility="{Binding DataContext.CanRemoveVideo, RelativeSource={RelativeSource AncestorType=UserControl}, Converter={StaticResource BoolToVisibilityConverter}}"
                      Command="{Binding DataContext.RemoveVideoCommand, RelativeSource={RelativeSource AncestorType=UserControl}}" CommandParameter="{Binding }"/>

            <!-- subscribe -->
            <MenuItem Visibility="{Binding DataContext.CanSubscribe, RelativeSource={RelativeSource AncestorType=UserControl}, Converter={StaticResource BoolToVisibilityConverter}}"
                      Command="{Binding DataContext.AddSubscriptionCommand, RelativeSource={RelativeSource AncestorType=UserControl}}" CommandParameter="{Binding }">
                <MenuItem.Header>
                    <TextBlock>
                        <Run Text="Subscribe to"/>
                        <Run Text="{Binding Uploader}" FontWeight="SemiBold"/>
                    </TextBlock>
                </MenuItem.Header>
            </MenuItem>

            <MenuItem Header="Favorite"
                      Visibility="{Binding DataContext.CanAddFavoriteVideo, RelativeSource={RelativeSource AncestorType=UserControl}, Converter={StaticResource BoolToVisibilityConverter}}"
                      Command="{Binding DataContext.AddFavoriteVideoCommand, RelativeSource={RelativeSource AncestorType=UserControl}}" CommandParameter="{Binding }"/>
        </ContextMenu>
    </UserControl.Resources>
    
    <ListBox ItemsSource="{Binding CurrentVideos}" SelectedItem="{Binding CurrentVideo, Mode=OneWay}">
        <ListBox.ItemTemplate>
            <DataTemplate>
                <TextBlock FontFamily="Bell Gothic Std" Text="{Binding Title}"/>
            </DataTemplate>
        </ListBox.ItemTemplate>
        <ListBox.ItemContainerStyle>
            <Style TargetType="{x:Type ListBoxItem}">
                <EventSetter Event="PreviewMouseRightButtonDown" Handler="OnListBoxItemPreviewMouseRightButtonDown" />
                <Setter Property="Foreground" Value="{DynamicResource ForegroundBrush}" />
                <Setter Property="Template">
                    <Setter.Value>
                        <ControlTemplate TargetType="{x:Type ListBoxItem}">
                            <Border BorderThickness="0,1" BorderBrush="{TemplateBinding BorderBrush}" Background="Transparent">
                                <i:Interaction.Triggers>
                                    <i:EventTrigger EventName="PreviewMouseLeftButtonDown">
                                        <Utilities:EventToCommand Command="{Binding DataContext.SelectVideoCommand, RelativeSource={RelativeSource AncestorType=UserControl}}" CommandParameter="{Binding }"/>
                                    </i:EventTrigger>
                                </i:Interaction.Triggers>
                                <ContentPresenter Margin="0,3"/>
                            </Border>
                            <ControlTemplate.Triggers>
                                <Trigger Property="IsSelected" Value="True">
                                    <Setter Property="Foreground" Value="{DynamicResource LightBlueBrush}" />
                                </Trigger>
                                <Trigger Property="IsMouseOver" Value="True">
                                    <Setter Property="BorderBrush" Value="{DynamicResource BorderBrush}"/>
                                </Trigger>
                            </ControlTemplate.Triggers>
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
                <Setter Property="ContextMenu" Value="{StaticResource VideoContextMenu}"/>
            </Style>
        </ListBox.ItemContainerStyle>
    </ListBox>
</UserControl>
