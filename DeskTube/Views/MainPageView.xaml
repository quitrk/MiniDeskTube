<UserControl x:Class="DeskTube.Views.MainPageView"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" 
             xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
             xmlns:ViewModels="clr-namespace:DeskTube.ViewModels"
             xmlns:i="http://schemas.microsoft.com/expression/2010/interactivity"
             xmlns:Utilities="clr-namespace:Infrastructure.Utilities;assembly=Infrastructure"
             xmlns:local="clr-namespace:DeskTube.Views" mc:Ignorable="d"
             d:DataContext="{d:DesignInstance ViewModels:MainPageViewModel}"
             IsEnabled="{Binding IsViewEnabled}">
	<UserControl.Resources>
		<Storyboard x:Key="HideBrowser">
			<DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(FrameworkElement.Height)" Storyboard.TargetName="browserView">
				<EasingDoubleKeyFrame KeyTime="0:0:0.2" Value="0"/>
			</DoubleAnimationUsingKeyFrames>
			<DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Opacity)" Storyboard.TargetName="browserView">
				<EasingDoubleKeyFrame KeyTime="0:0:0.2" Value="0"/>
			</DoubleAnimationUsingKeyFrames>
		</Storyboard>
		<Storyboard x:Key="ShowBrowser">
			<DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(FrameworkElement.Height)" Storyboard.TargetName="browserView">
				<SplineDoubleKeyFrame KeyTime="0:0:0.2" Value="400"/>
			</DoubleAnimationUsingKeyFrames>
			<DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Opacity)" Storyboard.TargetName="browserView">
				<SplineDoubleKeyFrame KeyTime="0:0:0.2" Value="1"/>
			</DoubleAnimationUsingKeyFrames>
		</Storyboard>
	</UserControl.Resources>

    <Grid>
        <Grid.RowDefinitions>
            <RowDefinition Height="Auto"/>
            <RowDefinition />
            <RowDefinition Height="Auto"/>
        </Grid.RowDefinitions>

        <StackPanel>
            <!-- user feeds-->
            <local:UserFeedsView Visibility="{Binding IsUserAuthenticated, Converter={StaticResource BoolToVisibilityConverter}}" Margin="10,0,10,10"/>

            <!-- video -->
            <ContentControl Visibility="{Binding IsBrowserVisible, Converter={StaticResource BoolToVisibilityConverter}}" Content="{Binding BrowserView}" x:Name="browserView"
                            Height="300"/>

            <!-- comments / timer -->
            <Border Background="{DynamicResource SecondaryBackgroundBrush}"
                    Visibility="{Binding CurrentVideo, Converter={StaticResource NullToVisibilityConverter}}" Margin="0,0,0,10">
                <Grid Margin="10">
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition Width="Auto"/>
                        <ColumnDefinition Width="Auto"/>
                        <ColumnDefinition />
                        <ColumnDefinition Width="Auto"/>
                    </Grid.ColumnDefinitions>

                    <Button Style="{DynamicResource CleanButtonStyle}" ToolTip="View comments" Command="{Binding ViewCommentsCommand}" x:Name="commentsBtn"
                            Visibility="{Binding IsCommentsButtonVisible, Converter={StaticResource BoolToVisibilityConverter}}">
                        <Image Source="../images/commentsIcon.png" Height="16"/>
                    </Button>

                    <Slider Minimum="0" Maximum="100" Value="{Binding VolumeLevel}" Grid.Column="1" Margin="10,0,0,0"
                            SmallChange="1"
                            Width="100" IsSelectionRangeEnabled="True" SelectionStart="0" SelectionEnd="{Binding VolumeLevel}">
                        <i:Interaction.Triggers>
                            <i:EventTrigger EventName="ValueChanged">
                                <Utilities:EventToCommand Command="{Binding ChangeVolumeCommand}"/>
                            </i:EventTrigger>
                        </i:Interaction.Triggers>
                    </Slider>

                    <Grid Grid.Column="2">
                        <Slider Minimum="0" Maximum="{Binding TotalSeconds, UpdateSourceTrigger=PropertyChanged}" 
                                Value="{Binding CurrentSecond}" IsSelectionRangeEnabled="True" SelectionStart="0" SelectionEnd="{Binding CurrentSecond}" Margin="10,0"
                                SmallChange="1"
                                Background="{DynamicResource BackgroundBrush}" Foreground="{DynamicResource BorderBrush}"
                                BorderBrush="{DynamicResource BorderBrush}">
                            <i:Interaction.Triggers>
                                <i:EventTrigger EventName="PreviewMouseLeftButtonUp">
                                    <Utilities:EventToCommand Command="{Binding SeekToCommand}"/>
                                </i:EventTrigger>
                            </i:Interaction.Triggers>
                        </Slider>
                        <TextBlock Style="{DynamicResource TextBlockStyle}" Foreground="{DynamicResource BaseForegroundBrush}" HorizontalAlignment="Center" Margin="10,0" 
                                   Text="{Binding CurrentVideo.Title}" TextWrapping="NoWrap" TextTrimming="CharacterEllipsis" VerticalAlignment="Center" FontSize="12"
                                   IsHitTestVisible="False"/>
                    </Grid>

                    <Popup IsOpen="{Binding IsCommentsPopupOpen}" PlacementTarget="{Binding ElementName=commentsBtn}" StaysOpen="False">
                        <Border Background="{DynamicResource SecondaryBackgroundBrush}" BorderThickness="1" BorderBrush="{DynamicResource BorderBrush}">

                            <StackPanel>
                                <ListBox ItemsSource="{Binding CurrentVideoComments}" Width="400" Height="400"
                                             Visibility="{Binding CurrentVideoComments.Count, Converter={StaticResource CountToVisibilityConverter}}">
                                    <ListBox.ItemTemplate>
                                        <DataTemplate>
                                            <StackPanel Margin="0,10,0,0">
                                                <TextBlock Text="{Binding Author}" Style="{DynamicResource TextBlockStyle}" />
                                                <TextBlock Text="{Binding Content}" Style="{DynamicResource TextBlockStyle}" Margin="0,5,0,0" TextWrapping="Wrap" Foreground="{DynamicResource BaseForegroundBrush}"/>

                                                <Path Style="{DynamicResource LineStyle}" Stroke="{DynamicResource BorderBrush}" Margin="0,10,0,0"/>
                                            </StackPanel>
                                        </DataTemplate>
                                    </ListBox.ItemTemplate>
                                </ListBox>

                                <TextBox Margin="10" Tag="Comment this video" Height="50" Width="400" 
                                         BorderBrush="{DynamicResource BorderBrush}" Background="{DynamicResource TransparentBackgroundBrush}"
                                         Foreground="{DynamicResource ForegroundBrush}"
                                         Text="{Binding NewVideoComment}"/>
                                <Button Margin="10,0,10,10" HorizontalAlignment="Right" Content="Submit"
                                        Command="{Binding AddVideoCommentCommand}"/>
                            </StackPanel>
                        </Border>
                    </Popup>

                    <TextBlock Grid.Column="3" Style="{DynamicResource TextBlockStyle}" VerticalAlignment="Bottom" FontSize="12">
                        <Run Text="{Binding CurrentMinute, StringFormat={}{0:D2}:}"/><Run Text="{Binding CurrentMinuteSecond, StringFormat=D2}"/>
                        <Run Text="/"/>
                        <Run Text="{Binding Minutes, StringFormat={}{0:D2}:}"/><Run Text="{Binding Seconds, StringFormat=D2}"/>
                    </TextBlock>
                </Grid>
            </Border>
        </StackPanel>

        <!-- current videos -->
        <local:CurrentVideosView Margin="10,0,10,10" Grid.Row="1"/>

        <!-- filter & video controls & search -->
        <StackPanel Grid.Row="2" Background="{DynamicResource SecondaryBackgroundBrush}">

            <!-- filter & video controls -->
            <Grid Margin="10,10,10,0" Visibility="{Binding CurrentVideos.Count, Converter={StaticResource CountToVisibilityConverter}, FallbackValue=Collapsed}">
                <Grid.ColumnDefinitions>
                    <ColumnDefinition />
                    <ColumnDefinition Width="Auto"/>
                </Grid.ColumnDefinitions>

                <TextBox Tag="Filter..." Text="{Binding FilterText, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" x:Name="filter"
                         Background="{DynamicResource TransparentBackgroundBrush}" Foreground="{DynamicResource ForegroundBrush}" BorderBrush="{DynamicResource BorderBrush}"/>

                <StackPanel Orientation="Horizontal" Margin="10,0,0,0" Grid.Column="1">
                    <Button Style="{DynamicResource CleanButtonStyle}" ToolTip="Stop" Command="{Binding StopCommand}">
                        <Image Source="../images/stopIcon.png" Height="16"/>
                    </Button>
                    <Button Style="{DynamicResource CleanButtonStyle}" Margin="10,0,0,0" ToolTip="Play" Command="{Binding PlayCommand}"
                            Visibility="{Binding IsPaused, Converter={StaticResource BoolToVisibilityConverter}}">
                        <Image Source="../images/playIcon.png" Height="16"/>
                    </Button>
                    <Button Style="{DynamicResource CleanButtonStyle}" Margin="10,0,0,0" ToolTip="Play" Command="{Binding PauseCommand}"
                            Visibility="{Binding IsPaused, Converter={StaticResource BoolToVisibilityInvertedConverter}}">
                        <Image Source="../images/pauseIcon.png" Height="16"/>
                    </Button>
                    <Button Style="{DynamicResource CleanButtonStyle}" Margin="10,0,0,0" ToolTip="Previous" Command="{Binding PlayPreviousVideoCommand}">
                        <Image Source="../images/previousIcon.png" Height="16"/>
                    </Button>
                    <Button Style="{DynamicResource CleanButtonStyle}" Margin="10,0,0,0" ToolTip="Next" Command="{Binding PlayNextVideoCommand}">
                        <Image Source="../images/nextIcon.png" Height="16"/>
                    </Button>
                    <ToggleButton Style="{DynamicResource ShuffleButtonStyle}" Margin="10,0,0,0" IsChecked="{Binding IsShuffle}"/>
                </StackPanel>
            </Grid>

            <!-- search -->
            <TextBox Tag="Search videos..." Text="{Binding SearchText, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" Margin="10">
                <i:Interaction.Triggers>
                    <i:EventTrigger EventName="PreviewKeyUp">
                        <Utilities:EventToCommand Command="{Binding SearchCommand}" PassEventArgsToCommand="True"/>
                    </i:EventTrigger>
                </i:Interaction.Triggers>
            </TextBox>
        </StackPanel>
    </Grid>
</UserControl>