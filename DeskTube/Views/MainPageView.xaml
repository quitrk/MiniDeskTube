<UserControl x:Class="DeskTube.Views.MainPageView"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" 
             xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
             xmlns:ViewModels="clr-namespace:DeskTube.ViewModels"
             xmlns:i="http://schemas.microsoft.com/expression/2010/interactivity"
             xmlns:Utilities="clr-namespace:Infrastructure.Utilities;assembly=Infrastructure" mc:Ignorable="d"
             d:DataContext="{d:DesignInstance ViewModels:MainPageViewModel}"
             IsEnabled="{Binding IsViewEnabled}">

    <UserControl.Resources>
        <ContextMenu x:Key="VideoContextMenu" 
                     Visibility="{Binding DataContext.IsUserAuthenticated, RelativeSource={RelativeSource AncestorType=UserControl}, Converter={StaticResource BoolToVisibilityConverter}}">

            <!-- add to -->
            <MenuItem Header="Add to" 
                          Visibility="{Binding DataContext.AvailablePlaylistsForAddVideo.Count, RelativeSource={RelativeSource AncestorType=UserControl}, Converter={StaticResource CountToVisibilityConverter}}"
                          ItemsSource="{Binding DataContext.AvailablePlaylistsForAddVideo, RelativeSource={RelativeSource AncestorType=UserControl}}">
                <MenuItem.ItemTemplate>
                    <DataTemplate>
                        <StackPanel Margin="-10">
                            <Path Style="{DynamicResource LineStyle}" x:Name="topBorder" Visibility="Collapsed"/>
                            <MenuItem Header="{Binding Title}" 
                                      Command="{Binding DataContext.AddVideoToPlaylistCommand, RelativeSource={RelativeSource AncestorType=UserControl}}">
                                <MenuItem.CommandParameter>
                                    <MultiBinding Converter="{StaticResource AddVideoToPlaylistConverter}">
                                        <Binding />
                                        <Binding Path="DataContext" RelativeSource="{RelativeSource AncestorType=ContextMenu}"/>
                                    </MultiBinding>
                                </MenuItem.CommandParameter>
                            </MenuItem>
                        </StackPanel>
                        <DataTemplate.Triggers>
                            <DataTrigger Binding="{Binding RelativeSource={RelativeSource PreviousData}}" Value="{x:Null}">
                                <Setter Property="Visibility" TargetName="topBorder" Value="Visible"/>
                            </DataTrigger>
                        </DataTemplate.Triggers>
                    </DataTemplate>
                </MenuItem.ItemTemplate>
            </MenuItem>

            <!-- remove -->
            <MenuItem Header="Remove"
                      Visibility="{Binding DataContext.CanRemoveVideo, RelativeSource={RelativeSource AncestorType=UserControl}, Converter={StaticResource BoolToVisibilityConverter}}"
                      Command="{Binding DataContext.RemoveVideoCommand, RelativeSource={RelativeSource AncestorType=UserControl}}" CommandParameter="{Binding }"/>

            <!-- subscribe -->
            <MenuItem Visibility="{Binding DataContext.CanSubscribe, RelativeSource={RelativeSource AncestorType=UserControl}, Converter={StaticResource BoolToVisibilityConverter}}"
                      Command="{Binding DataContext.AddSubscriptionCommand, RelativeSource={RelativeSource AncestorType=UserControl}}" CommandParameter="{Binding }">
                <MenuItem.Header>
                    <TextBlock>
                        <Run Text="Subscribe to"/>
                        <Run Text="{Binding Uploader}" FontWeight="SemiBold"/>
                    </TextBlock>
                </MenuItem.Header>
            </MenuItem>

            <MenuItem Header="Favorite"
                      Visibility="{Binding DataContext.CanAddFavoriteVideo, RelativeSource={RelativeSource AncestorType=UserControl}, Converter={StaticResource BoolToVisibilityConverter}}"
                      Command="{Binding DataContext.AddFavoriteVideoCommand, RelativeSource={RelativeSource AncestorType=UserControl}}" CommandParameter="{Binding }"/>
        </ContextMenu>
    </UserControl.Resources>

    <Grid>
        <Grid.RowDefinitions>
            <RowDefinition Height="Auto"/>
            <RowDefinition />
            <RowDefinition Height="Auto"/>
        </Grid.RowDefinitions>

        <StackPanel>
            <StackPanel Margin="0,0,0,10">
                <!-- user feeds -->
                <ListBox ItemsSource="{Binding UserFeeds}" SelectedItem="{Binding SelectedUserFeed}" Margin="10,0"
                             Visibility="{Binding IsUserAuthenticated, Converter={StaticResource BoolToVisibilityConverter}}">
                    <ListBox.ItemsPanel>
                        <ItemsPanelTemplate>
                            <VirtualizingStackPanel Orientation="Horizontal"/>
                        </ItemsPanelTemplate>
                    </ListBox.ItemsPanel>
                    <ListBox.ItemTemplate>
                        <DataTemplate>
                            <TextBlock FontFamily="Century Gothic" FontSize="18" Text="{Binding }" Margin="0,0,10,0"/>
                        </DataTemplate>
                    </ListBox.ItemTemplate>
                    <ListBox.ItemContainerStyle>
                        <Style TargetType="{x:Type ListBoxItem}">
                            <Setter Property="Foreground" Value="{DynamicResource ForegroundBrush}"/>
                            <Setter Property="Cursor" Value="Hand"/>
                            <Setter Property="Template">
                                <Setter.Value>
                                    <ControlTemplate TargetType="{x:Type ListBoxItem}">
                                        <ContentPresenter />
                                        <ControlTemplate.Triggers>
                                            <Trigger Property="IsSelected" Value="True">
                                                <Setter Property="Foreground" Value="{DynamicResource BaseForegroundBrush}"/>
                                            </Trigger>
                                        </ControlTemplate.Triggers>
                                    </ControlTemplate>
                                </Setter.Value>
                            </Setter>
                        </Style>
                    </ListBox.ItemContainerStyle>
                </ListBox>

                <!-- playlists -->
                <ListBox ItemsSource="{Binding Playlists}" SelectedItem="{Binding SelectedPlaylist}" Grid.Row="1" Margin="10,0"
                     Visibility="{Binding ArePlaylistsVisible, Converter={StaticResource BoolToVisibilityConverter}}">
                    <ListBox.ItemsPanel>
                        <ItemsPanelTemplate>
                            <VirtualizingStackPanel Orientation="Horizontal"/>
                        </ItemsPanelTemplate>
                    </ListBox.ItemsPanel>
                    <ListBox.ItemTemplate>
                        <DataTemplate>
                            <TextBlock FontFamily="Bell Gothic Std" Margin="0,0,10,0">
                            <Run Text="{Binding Title}"/>
                            <Run Text="{Binding CountHint, StringFormat={}({0} videos), Mode=OneWay}"/>
                            </TextBlock>
                        </DataTemplate>
                    </ListBox.ItemTemplate>
                    <ListBox.ItemContainerStyle>
                        <Style TargetType="{x:Type ListBoxItem}">
                            <Setter Property="Foreground" Value="{DynamicResource ForegroundBrush}"/>
                            <Setter Property="Cursor" Value="Hand"/>
                            <Setter Property="Template">
                                <Setter.Value>
                                    <ControlTemplate TargetType="{x:Type ListBoxItem}">
                                        <ContentPresenter />
                                        <ControlTemplate.Triggers>
                                            <Trigger Property="IsSelected" Value="True">
                                                <Setter Property="Foreground" Value="{DynamicResource BaseForegroundBrush}"/>
                                            </Trigger>
                                        </ControlTemplate.Triggers>
                                    </ControlTemplate>
                                </Setter.Value>
                            </Setter>
                        </Style>
                    </ListBox.ItemContainerStyle>
                </ListBox>

                <!-- subscriptions -->
                <ListBox ItemsSource="{Binding Subscriptions}" SelectedItem="{Binding SelectedSubscription}" Grid.Row="1" Margin="10,0"
                     Visibility="{Binding AreSubscriptionsVisible, Converter={StaticResource BoolToVisibilityConverter}}">
                    <ListBox.ItemsPanel>
                        <ItemsPanelTemplate>
                            <WrapPanel Orientation="Horizontal"/>
                        </ItemsPanelTemplate>
                    </ListBox.ItemsPanel>
                    <ListBox.ItemTemplate>
                        <DataTemplate>
                            <TextBlock FontFamily="Bell Gothic Std" Margin="0,0,10,0" Text="{Binding UserName}"/>
                        </DataTemplate>
                    </ListBox.ItemTemplate>
                    <ListBox.ItemContainerStyle>
                        <Style TargetType="{x:Type ListBoxItem}">
                            <Setter Property="Foreground" Value="{DynamicResource ForegroundBrush}"/>
                            <Setter Property="Cursor" Value="Hand"/>
                            <Setter Property="Template">
                                <Setter.Value>
                                    <ControlTemplate TargetType="{x:Type ListBoxItem}">
                                        <ContentPresenter />
                                        <ControlTemplate.Triggers>
                                            <Trigger Property="IsSelected" Value="True">
                                                <Setter Property="Foreground" Value="{DynamicResource BaseForegroundBrush}"/>
                                            </Trigger>
                                        </ControlTemplate.Triggers>
                                    </ControlTemplate>
                                </Setter.Value>
                            </Setter>
                        </Style>
                    </ListBox.ItemContainerStyle>
                </ListBox>
            </StackPanel>

            <StackPanel>
                <!-- video -->
                <ContentControl Visibility="{Binding IsBrowserVisible, Converter={StaticResource BoolToVisibilityConverter}}" Content="{Binding BrowserView}" x:Name="browserView"/>

                <!-- comments / timer -->
                <Border Background="{DynamicResource SecondaryBackgroundBrush}" Visibility="{Binding CurrentVideo, Converter={StaticResource NullToVisibilityConverter}}" Margin="0,0,0,10">
                    <Grid Margin="10">
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="Auto"/>
                            <ColumnDefinition Width="Auto"/>
                            <ColumnDefinition />
                            <ColumnDefinition Width="Auto"/>
                        </Grid.ColumnDefinitions>

                        <Button Style="{DynamicResource CleanButtonStyle}" ToolTip="View comments" Command="{Binding ViewCommentsCommand}" x:Name="commentsBtn">
                            <Image Source="../images/commentsIcon.png" Height="16"/>
                        </Button>

                        <Slider Minimum="0" Maximum="100" Value="{Binding VolumeLevel}" Grid.Column="1" Margin="10,0,0,0"
                    Width="100" IsSelectionRangeEnabled="True" SelectionStart="0" SelectionEnd="{Binding VolumeLevel}"/>

                        <TextBlock Grid.Column="2" Style="{DynamicResource TextBlockStyle}" Foreground="{DynamicResource BaseForegroundBrush}" HorizontalAlignment="Center" Margin="10,0" 
                       Text="{Binding CurrentVideo.Title}" TextWrapping="NoWrap" TextTrimming="CharacterEllipsis" VerticalAlignment="Bottom" FontSize="12"/>

                        <Popup IsOpen="{Binding IsCommentsPopupOpen}" PlacementTarget="{Binding ElementName=commentsBtn}" StaysOpen="False">
                            <Border Background="{DynamicResource SecondaryBackgroundBrush}" BorderThickness="1" BorderBrush="{DynamicResource BorderBrush}">

                                <StackPanel>
                                    <ListBox ItemsSource="{Binding CurrentVideoComments}" Width="400" Height="400"
                                             Visibility="{Binding CurrentVideoComments.Count, Converter={StaticResource CountToVisibilityConverter}}">
                                        <ListBox.ItemTemplate>
                                            <DataTemplate>
                                                <StackPanel Margin="0,10,0,0">
                                                    <TextBlock Text="{Binding Author}" Style="{DynamicResource TextBlockStyle}" />
                                                    <TextBlock Text="{Binding Content}" Style="{DynamicResource TextBlockStyle}" Margin="0,5,0,0" TextWrapping="Wrap" Foreground="{DynamicResource BaseForegroundBrush}"/>

                                                    <Path Style="{DynamicResource LineStyle}" Stroke="{DynamicResource BorderBrush}" Margin="0,10,0,0"/>
                                                </StackPanel>
                                            </DataTemplate>
                                        </ListBox.ItemTemplate>
                                    </ListBox>

                                    <TextBox Margin="10" Tag="Comment this video" Height="50" Width="400" BorderBrush="{DynamicResource BorderBrush}" Background="{DynamicResource TransparentBackgroundBrush}" Foreground="{DynamicResource ForegroundBrush}"/>
                                    <Button Margin="10,0,10,10" HorizontalAlignment="Right" Content="Submit"/>
                                </StackPanel>
                            </Border>
                        </Popup>

                        <TextBlock Grid.Column="3" Style="{DynamicResource TextBlockStyle}" VerticalAlignment="Bottom" FontSize="12">
                    <Run Text="{Binding CurrentMinute, StringFormat={}{0:D2}:}"/><Run Text="{Binding CurrentSecond, StringFormat=D2}"/>
                    <Run Text="/"/>
                    <Run Text="{Binding TotalMinutes, StringFormat={}{0:D2}:}"/><Run Text="{Binding TotalSeconds, StringFormat=D2}"/>
                        </TextBlock>
                    </Grid>
                </Border>
            </StackPanel>
        </StackPanel>

        <!-- current videos -->
        <ListBox ItemsSource="{Binding CurrentVideos}" SelectedItem="{Binding CurrentVideo, Mode=OneWay}" Margin="10,0,10,10" Grid.Row="1">
            <ListBox.ItemTemplate>
                <DataTemplate>
                    <TextBlock FontFamily="Bell Gothic Std" Text="{Binding Title}"/>
                </DataTemplate>
            </ListBox.ItemTemplate>
            <ListBox.ItemContainerStyle>
                <Style TargetType="{x:Type ListBoxItem}">
                    <EventSetter Event="PreviewMouseRightButtonDown" Handler="OnListBoxItemPreviewMouseRightButtonDown" />
                    <Setter Property="Foreground" Value="{DynamicResource ForegroundBrush}" />
                    <Setter Property="Template">
                        <Setter.Value>
                            <ControlTemplate TargetType="{x:Type ListBoxItem}">
                                <Border BorderThickness="0,1" BorderBrush="{TemplateBinding BorderBrush}" Background="Transparent">
                                    <i:Interaction.Triggers>
                                        <i:EventTrigger EventName="PreviewMouseLeftButtonDown">
                                            <Utilities:EventToCommand Command="{Binding DataContext.SelectVideoCommand, RelativeSource={RelativeSource AncestorType=UserControl}}" CommandParameter="{Binding }"/>
                                        </i:EventTrigger>
                                    </i:Interaction.Triggers>
                                    <ContentPresenter Margin="0,3"/>
                                </Border>
                                <ControlTemplate.Triggers>
                                    <Trigger Property="IsSelected" Value="True">
                                        <Setter Property="Foreground" Value="{DynamicResource LightBlueBrush}" />
                                    </Trigger>
                                    <Trigger Property="IsMouseOver" Value="True">
                                        <Setter Property="BorderBrush" Value="{DynamicResource BorderBrush}"/>
                                    </Trigger>
                                </ControlTemplate.Triggers>
                            </ControlTemplate>
                        </Setter.Value>
                    </Setter>
                    <Setter Property="ContextMenu" Value="{StaticResource VideoContextMenu}"/>
                </Style>
            </ListBox.ItemContainerStyle>
        </ListBox>

        <!-- filter & video controls & search -->
        <StackPanel Grid.Row="2" Background="{DynamicResource SecondaryBackgroundBrush}">

            <!-- filter & video controls -->
            <Grid Margin="10,10,10,0" Visibility="{Binding CurrentVideos.Count, Converter={StaticResource CountToVisibilityConverter}, FallbackValue=Collapsed}">
                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="Auto"/>
                    <ColumnDefinition />
                    <ColumnDefinition Width="Auto"/>
                </Grid.ColumnDefinitions>

                <Button Command="{Binding SyncCommand}" Visibility="{Binding IsUserAuthenticated, Converter={StaticResource BoolToVisibilityConverter}}" Margin="0,0,10,0"
                        BorderBrush="{DynamicResource BorderBrush}">
                    <Button.Style>
                        <Style TargetType="{x:Type Button}" BasedOn="{StaticResource {x:Type Button}}">
                            <Setter Property="Padding" Value="3"/>
                            <Style.Triggers>
                                <DataTrigger Binding="{Binding IsSynced}" Value="True">
                                    <Setter Property="Content">
                                        <Setter.Value>
                                            <Grid>
                                                <Grid.ColumnDefinitions>
                                                    <ColumnDefinition />
                                                    <ColumnDefinition Width="Auto"/>
                                                </Grid.ColumnDefinitions>
                                                <TextBlock Text="Synced"/>
                                                <Image Source="../images/checkedIcon.png" Grid.Column="1" VerticalAlignment="Center" Height="14" Margin="10,0,0,0"/>
                                            </Grid>
                                        </Setter.Value>
                                    </Setter>
                                </DataTrigger>
                                <DataTrigger Binding="{Binding IsSynced}" Value="False">
                                    <Setter Property="Content" Value="Sync now"/>
                                </DataTrigger>
                            </Style.Triggers>
                        </Style>
                    </Button.Style>
                </Button>

                <TextBox FontFamily="Century Gothic" Tag="Filter..." Text="{Binding FilterText, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" x:Name="filter"
                         Grid.Column="1"  Background="{DynamicResource TransparentBackgroundBrush}" Foreground="{DynamicResource ForegroundBrush}" BorderBrush="{DynamicResource BorderBrush}"/>

                <StackPanel Orientation="Horizontal" Margin="10,0,0,0" Grid.Column="2">
                    <Button Style="{DynamicResource CleanButtonStyle}" ToolTip="Stop" Command="{Binding StopCommand}">
                        <Image Source="../images/stopIcon.png" Height="16"/>
                    </Button>
                    <Button Style="{DynamicResource CleanButtonStyle}" Margin="10,0,0,0" ToolTip="Play" Command="{Binding PlayCommand}"
                            Visibility="{Binding IsPaused, Converter={StaticResource BoolToVisibilityConverter}}">
                        <Image Source="../images/playIcon.png" Height="16"/>
                    </Button>
                    <Button Style="{DynamicResource CleanButtonStyle}" Margin="10,0,0,0" ToolTip="Play" Command="{Binding PauseCommand}"
                            Visibility="{Binding IsPaused, Converter={StaticResource BoolToVisibilityInvertedConverter}}">
                        <Image Source="../images/pauseIcon.png" Height="16"/>
                    </Button>
                    <Button Style="{DynamicResource CleanButtonStyle}" Margin="10,0,0,0" ToolTip="Previous" Command="{Binding PlayPreviousVideoCommand}">
                        <Image Source="../images/previousIcon.png" Height="16"/>
                    </Button>
                    <Button Style="{DynamicResource CleanButtonStyle}" Margin="10,0,0,0" ToolTip="Next" Command="{Binding PlayNextVideoCommand}">
                        <Image Source="../images/nextIcon.png" Height="16"/>
                    </Button>
                    <ToggleButton Style="{DynamicResource ShuffleButtonStyle}" Margin="10,0,0,0" IsChecked="{Binding IsShuffle}"/>
                </StackPanel>
            </Grid>

            <!-- search -->
            <TextBox Tag="Search videos..." Text="{Binding SearchText, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" Margin="10">
                <i:Interaction.Triggers>
                    <i:EventTrigger EventName="PreviewKeyUp">
                        <Utilities:EventToCommand Command="{Binding SearchCommand}" PassEventArgsToCommand="True"/>
                    </i:EventTrigger>
                </i:Interaction.Triggers>
            </TextBox>
        </StackPanel>
    </Grid>
</UserControl>