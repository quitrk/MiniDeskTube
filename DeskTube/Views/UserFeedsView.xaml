<UserControl x:Class="DeskTube.Views.UserFeedsView"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" 
             xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
             xmlns:ViewModels="clr-namespace:DeskTube.ViewModels"
             xmlns:i="http://schemas.microsoft.com/expression/2010/interactivity"
             xmlns:Utilities="clr-namespace:Infrastructure.Utilities;assembly=Infrastructure"
             mc:Ignorable="d" 
             d:DesignHeight="300" d:DesignWidth="300"
             d:DataContext="{d:DesignInstance ViewModels:MainPageViewModel}">

    <UserControl.Resources>
        <ContextMenu x:Key="PlaylistsMenu" ItemsSource="{Binding DataContext.Playlists, RelativeSource={RelativeSource AncestorType=UserControl}}">
            <ContextMenu.ItemTemplate>
                <DataTemplate>
                    <TextBlock>
                        <i:Interaction.Triggers>
                            <i:EventTrigger EventName="PreviewMouseLeftButtonDown">
                                <Utilities:EventToCommand Command="{Binding DataContext.SelectPlaylistCommand, RelativeSource={RelativeSource AncestorType=UserControl}}"
                                                          CommandParameter="{Binding }"/>
                            </i:EventTrigger>
                        </i:Interaction.Triggers>

                        <TextBlock Text="{Binding Title}"/>
                    </TextBlock>
                </DataTemplate>
            </ContextMenu.ItemTemplate>
        </ContextMenu>

        <ContextMenu x:Key="SubscriptionsMenu" ItemsSource="{Binding DataContext.Subscriptions, RelativeSource={RelativeSource AncestorType=UserControl}}">
            <ContextMenu.ItemTemplate>
                <DataTemplate>
                    <TextBlock Text="{Binding UserName}">
                            <i:Interaction.Triggers>
                            <i:EventTrigger EventName="PreviewMouseLeftButtonDown">
                                <Utilities:EventToCommand Command="{Binding DataContext.SelectSubscriptionCommand, RelativeSource={RelativeSource AncestorType=UserControl}}"
                                                          CommandParameter="{Binding }"/>
                            </i:EventTrigger>
                        </i:Interaction.Triggers>
                    </TextBlock>
                </DataTemplate>
            </ContextMenu.ItemTemplate>
        </ContextMenu>

        <ContextMenu x:Key="ManageMenu">
            <!-- create playlist -->
            <MenuItem Header="Create playlist"
                      Command="{Binding DataContext.CreatePlaylistCommand, RelativeSource={RelativeSource AncestorType=UserControl}}"/>

            <!-- delete playlist -->
            <MenuItem Header="Delete playlist" 
                          Visibility="{Binding DataContext.Playlists.Count, RelativeSource={RelativeSource AncestorType=UserControl}, Converter={StaticResource CountToVisibilityConverter}, FallbackValue=Collapsed}"
                          ItemsSource="{Binding DataContext.Playlists, RelativeSource={RelativeSource AncestorType=UserControl}}">
                <MenuItem.ItemTemplate>
                    <DataTemplate>
                        <StackPanel Margin="-10">
                            <Path Style="{DynamicResource LineStyle}" x:Name="topBorder" Visibility="Collapsed"/>
                            <MenuItem Header="{Binding Title}" 
                                      Command="{Binding DataContext.RemovePlaylistCommand, RelativeSource={RelativeSource AncestorType=UserControl}}"
                                      CommandParameter="{Binding }"/>
                        </StackPanel>
                        <DataTemplate.Triggers>
                            <DataTrigger Binding="{Binding RelativeSource={RelativeSource PreviousData}}" Value="{x:Null}">
                                <Setter Property="Visibility" TargetName="topBorder" Value="Visible"/>
                            </DataTrigger>
                        </DataTemplate.Triggers>
                    </DataTemplate>
                </MenuItem.ItemTemplate>
            </MenuItem>

            <!-- unsubscribe -->
            <MenuItem Header="Unsubscribe from" 
                          Visibility="{Binding DataContext.Subscriptions.Count, RelativeSource={RelativeSource AncestorType=UserControl}, Converter={StaticResource CountToVisibilityConverter}, FallbackValue=Collapsed}"
                          ItemsSource="{Binding DataContext.Subscriptions, RelativeSource={RelativeSource AncestorType=UserControl}}">
                <MenuItem.ItemTemplate>
                    <DataTemplate>
                        <StackPanel Margin="-10">
                            <Path Style="{DynamicResource LineStyle}" x:Name="topBorder" Visibility="Collapsed"/>
                            <MenuItem Header="{Binding UserName}" 
                                      Command="{Binding DataContext.RemoveSubscriptionCommand, RelativeSource={RelativeSource AncestorType=UserControl}}"
                                      CommandParameter="{Binding }"/>
                        </StackPanel>
                        <DataTemplate.Triggers>
                            <DataTrigger Binding="{Binding RelativeSource={RelativeSource PreviousData}}" Value="{x:Null}">
                                <Setter Property="Visibility" TargetName="topBorder" Value="Visible"/>
                            </DataTrigger>
                        </DataTemplate.Triggers>
                    </DataTemplate>
                </MenuItem.ItemTemplate>
            </MenuItem>
            
            <!-- sync -->
            <MenuItem Header="Sync" Command="{Binding DataContext.SyncCommand, RelativeSource={RelativeSource AncestorType=UserControl}}"
                      Visibility="{Binding IsSynced, Converter={StaticResource BoolToVisibilityInvertedConverter}}"/>
        </ContextMenu>
    </UserControl.Resources>

    <Grid>
        <Grid.ColumnDefinitions>
            <ColumnDefinition />
            <ColumnDefinition Width="Auto"/>
        </Grid.ColumnDefinitions>

        <ListBox ItemsSource="{Binding UserFeeds}" SelectedItem="{Binding SelectedUserFeed}" x:Name="feeds">
            <ListBox.ItemsPanel>
                <ItemsPanelTemplate>
                    <VirtualizingStackPanel Orientation="Horizontal"/>
                </ItemsPanelTemplate>
            </ListBox.ItemsPanel>
            <ListBox.ItemTemplate>
                <DataTemplate>
                    <TextBlock FontFamily="Century Gothic" FontSize="18" Text="{Binding }" Margin="0,0,10,0" />
                </DataTemplate>
            </ListBox.ItemTemplate>
            <ListBox.ItemContainerStyle>
                <Style TargetType="{x:Type ListBoxItem}">
                    <EventSetter Event="PreviewMouseRightButtonDown" Handler="OnUserFeedMouseDown"/>
                    <EventSetter Event="PreviewMouseLeftButtonDown" Handler="OnUserFeedMouseDown"/>
                    <Setter Property="Foreground" Value="{DynamicResource ForegroundBrush}"/>
                    <Setter Property="Cursor" Value="Hand"/>
                    <Setter Property="Template">
                        <Setter.Value>
                            <ControlTemplate TargetType="{x:Type ListBoxItem}">
                                <ContentPresenter />
                                <ControlTemplate.Triggers>
                                    <Trigger Property="IsSelected" Value="True">
                                        <Setter Property="Foreground" Value="{DynamicResource BaseForegroundBrush}"/>
                                    </Trigger>
                                </ControlTemplate.Triggers>
                            </ControlTemplate>
                        </Setter.Value>
                    </Setter>
                </Style>
            </ListBox.ItemContainerStyle>
        </ListBox>

        <Button Style="{DynamicResource CleanButtonStyle}" Grid.Column="1"
                x:Name="manageBtn"
                PreviewMouseLeftButtonDown="OnManageMouseDown"
                PreviewMouseRightButtonDown="OnManageMouseDown">
            <TextBlock FontFamily="Century Gothic" FontSize="18" Foreground="{DynamicResource ForegroundBrush}" Text="manage" />
        </Button>
    </Grid>
</UserControl>
